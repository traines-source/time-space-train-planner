// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Hint hint
//
// swagger:model Hint
type Hint struct {

	// code
	Code string `json:"code,omitempty"`

	// summary
	Summary string `json:"summary,omitempty"`

	// text
	Text string `json:"text,omitempty"`

	// trip Id
	TripID string `json:"tripId,omitempty"`

	// type
	// Enum: ["foreign-id","hint","local-fare-zone","status","stop-dhid","stop-website","transit-authority"]
	Type string `json:"type,omitempty"`
}

// Validate validates this hint
func (m *Hint) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var hintTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["foreign-id","hint","local-fare-zone","status","stop-dhid","stop-website","transit-authority"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hintTypeTypePropEnum = append(hintTypeTypePropEnum, v)
	}
}

const (

	// HintTypeForeignDashID captures enum value "foreign-id"
	HintTypeForeignDashID string = "foreign-id"

	// HintTypeHint captures enum value "hint"
	HintTypeHint string = "hint"

	// HintTypeLocalDashFareDashZone captures enum value "local-fare-zone"
	HintTypeLocalDashFareDashZone string = "local-fare-zone"

	// HintTypeStatus captures enum value "status"
	HintTypeStatus string = "status"

	// HintTypeStopDashDhid captures enum value "stop-dhid"
	HintTypeStopDashDhid string = "stop-dhid"

	// HintTypeStopDashWebsite captures enum value "stop-website"
	HintTypeStopDashWebsite string = "stop-website"

	// HintTypeTransitDashAuthority captures enum value "transit-authority"
	HintTypeTransitDashAuthority string = "transit-authority"
)

// prop value enum
func (m *Hint) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, hintTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *Hint) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this hint based on context it is used
func (m *Hint) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Hint) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Hint) UnmarshalBinary(b []byte) error {
	var res Hint
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
