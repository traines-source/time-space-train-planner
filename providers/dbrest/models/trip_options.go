// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TripOptions trip options
//
// swagger:model TripOptions
type TripOptions struct {

	// parse & expose entrances of stops/stations?
	Entrances *bool `json:"entrances,omitempty"`

	// Language of the results
	Language *string `json:"language,omitempty"`

	// return a shape for the trip?
	Polyline *bool `json:"polyline,omitempty"`

	// parse & expose hints & warnings?
	Remarks *bool `json:"remarks,omitempty"`

	// parse which days each journey is valid on
	ScheduledDays *bool `json:"scheduledDays,omitempty"`

	// return stations on the way?
	Stopovers *bool `json:"stopovers,omitempty"`

	// parse & expose sub-stops of stations?
	SubStops *bool `json:"subStops,omitempty"`
}

// Validate validates this trip options
func (m *TripOptions) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this trip options based on context it is used
func (m *TripOptions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TripOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TripOptions) UnmarshalBinary(b []byte) error {
	var res TripOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
