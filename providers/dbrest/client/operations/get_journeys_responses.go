// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"traines.eu/time-space-train-planner/providers/dbrest/models"
)

// GetJourneysReader is a Reader for the GetJourneys structure.
type GetJourneysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetJourneysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetJourneysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[GET /journeys] GetJourneys", response, response.Code())
	}
}

// NewGetJourneysOK creates a GetJourneysOK with default headers values
func NewGetJourneysOK() *GetJourneysOK {
	return &GetJourneysOK{}
}

/*
GetJourneysOK describes a response with status code 200, with default header values.

An object with an array of journeys, in the [`hafas-client` format](https://github.com/public-transport/hafas-client/blob/6/docs/journeys.md).
*/
type GetJourneysOK struct {
	Payload *GetJourneysOKBody
}

// IsSuccess returns true when this get journeys o k response has a 2xx status code
func (o *GetJourneysOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get journeys o k response has a 3xx status code
func (o *GetJourneysOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get journeys o k response has a 4xx status code
func (o *GetJourneysOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get journeys o k response has a 5xx status code
func (o *GetJourneysOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get journeys o k response a status code equal to that given
func (o *GetJourneysOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get journeys o k response
func (o *GetJourneysOK) Code() int {
	return 200
}

func (o *GetJourneysOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /journeys][%d] getJourneysOK %s", 200, payload)
}

func (o *GetJourneysOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /journeys][%d] getJourneysOK %s", 200, payload)
}

func (o *GetJourneysOK) GetPayload() *GetJourneysOKBody {
	return o.Payload
}

func (o *GetJourneysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetJourneysOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetJourneysOKBody get journeys o k body
swagger:model GetJourneysOKBody
*/
type GetJourneysOKBody struct {

	// earlier ref
	EarlierRef string `json:"earlierRef,omitempty"`

	// journeys
	// Required: true
	Journeys []*models.Journey `json:"journeys"`

	// later ref
	LaterRef string `json:"laterRef,omitempty"`

	// realtime data updated at
	RealtimeDataUpdatedAt int64 `json:"realtimeDataUpdatedAt,omitempty"`
}

// Validate validates this get journeys o k body
func (o *GetJourneysOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateJourneys(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetJourneysOKBody) validateJourneys(formats strfmt.Registry) error {

	if err := validate.Required("getJourneysOK"+"."+"journeys", "body", o.Journeys); err != nil {
		return err
	}

	for i := 0; i < len(o.Journeys); i++ {
		if swag.IsZero(o.Journeys[i]) { // not required
			continue
		}

		if o.Journeys[i] != nil {
			if err := o.Journeys[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getJourneysOK" + "." + "journeys" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getJourneysOK" + "." + "journeys" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get journeys o k body based on the context it is used
func (o *GetJourneysOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateJourneys(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetJourneysOKBody) contextValidateJourneys(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Journeys); i++ {

		if o.Journeys[i] != nil {

			if swag.IsZero(o.Journeys[i]) { // not required
				return nil
			}

			if err := o.Journeys[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getJourneysOK" + "." + "journeys" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getJourneysOK" + "." + "journeys" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetJourneysOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetJourneysOKBody) UnmarshalBinary(b []byte) error {
	var res GetJourneysOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
